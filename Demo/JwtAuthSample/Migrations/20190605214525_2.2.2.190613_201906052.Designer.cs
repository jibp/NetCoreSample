// <auto-generated />
using JwtAuthSample.Store;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JwtAuthSample.Migrations
{
    [DbContext(typeof(JwtDbContext))]
    [Migration("20190605214525_2.2.2.190613_201906052")]
    partial class _222190613_201906052
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JwtAuthSample.Entity.Book", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("ISBN");

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("JwtAuthSample.Entity.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("JwtAuthSample.Entity.MoreToMore.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("JwtAuthSample.Entity.MoreToMore.PostTag", b =>
                {
                    b.Property<int>("PostId");

                    b.Property<int>("TagId");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("JwtAuthSample.Entity.MoreToMore.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("JwtAuthSample.Entity.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("Price")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("JwtAuthSample.Entity.Book", b =>
                {
                    b.HasOne("JwtAuthSample.Entity.Product", "product")
                        .WithOne("Book")
                        .HasForeignKey("JwtAuthSample.Entity.Book", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JwtAuthSample.Entity.MoreToMore.PostTag", b =>
                {
                    b.HasOne("JwtAuthSample.Entity.MoreToMore.Post", "Post")
                        .WithMany("postTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JwtAuthSample.Entity.MoreToMore.Tag", "Tag")
                        .WithMany("postTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JwtAuthSample.Entity.Product", b =>
                {
                    b.HasOne("JwtAuthSample.Entity.Category", "CategoryEntity")
                        .WithMany("ProductList")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
